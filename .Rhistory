hello <- function() {print("butt")}
hello()
hello <<- 1
hello
help(with)
help("assign")
help("get")
get(hello)
get("hello")
search()
help(mget)
objs <- mget(ls("package:base"), inherits = TRUE)
objs
funs <- Filter(is.function, objs)
funs
Filter(is.null(body), objs)
help(apply)
help(sapply)
lapply(funs, formals)
lapply(funs, length(formals))
lapply(length, lapply(funs, formals))
lapply(funs, formals)
lapply(lapply(funs, formals), length)
lapply(lapply(funs, formals), length)
list <- lapply(lapply(funs, formals), length)
l <- lapply(lapply(funs, formals), length)
rm(list)
l
class(l)
max(l)
vector(l)
as.vector(l)
max(as.vector(l))
help(max)
help(apply)
help(lapply)
l <- sapply(lapply(funs, formals), length, simplify = TRUE)
l
max(l)
l[l == 22]
install.packages('dplyr')
search()
library(dplyr)
environtments(subset())
environtment(subset
)
environment(subset)
environment(group_by)
x <- 1
h <- function() {}
h <- function() {
y <- 2
i <- function() {
z <- 3
c(x,y,z)
}
i()
}
h)_
h()_
h()
j <- function(x) {
y <- 2
function() {
c(x,y)
}
}
k <- j(1)
k
k()
l <- function(x) x + 1
m <- function() {
l <- function(x) x * 3
l(10)
}
m()
'(' <- function(e1) {
if(is.numeric(e1) && runif(1) < 0.1) {
e1 + 1
} else {
e1
}
}
(1,2,3)
(1)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(4)
(1)
(1)
(1)
(1)
(1)
(1)
(1)
(1)
(1)
(1)
(1)
rm(())
rm(()
rm('(')
f <- function(x) {
f <- function(x) {
f <- function(x) {
x ^ 2
}
f(x) + 1
}
f(x) * 2
}
f(10)
add <- function(x) {
function(y) x + y
}
help(lapply)
lapply(1:10, add)
adders <- lapply(1:10, add)
adders[[1]]
adders[[2]]
str(adders[[1]])
add(13)
a <- add(13)
a
a(4)
b <- add(10)
b
b(1)
a(1)
adders[[1]](10)
adders[[2]](10)
add <- function(x) {
function(y) x + y
}
adders <- lapply(1:10, add)
adders
adders[[10]](10)
adders[[1]](10)
add <- function(x) {
function(y) x + y
}
adders <- lapply(1:10, add)
adders[[1]](10)
adders[[10]](10)
add <- function(x) {
function(y) "stfu brian"
}
adders <- lapply(1:10, add)
adders[[1]](10)
adders[[10]](10)
z <- function(x,y) x+y
3 z 7
z
3z7
'z' <- function(x,y) x+y
3 z 7
'.' <- function(x,y) x+y
3 . 7
'.'(3,7)
f1 <- function(x = {y <- 1;2}, y = 0) {x+y}
f1()
y <- 1;2
y
y
x <- {y <- 1;2}
f <- function(...) {names(list(...))}
f(butt = 3)
get(x)
get('x')
body([])
body('[]')
body('[')
help(.Primative())
help(.Primative
)
??.Primitive
objs <- mget(ls("package:base"), inherits = TRUE)
new <- filter(is.function, objs)
new <- Filter(is.function, objs)
new
names(new)
help("grep")
pat <- '\<\-'
pat <- '\\<\\-'
grep(pat, names(new))
pat <- '<-'
grep(pat, names(new))
new[grep(pat, names(new))]
names(new[grep(pat, names(new))])
Filter(.Primative, new[grep(pat, names(new))])
Filter(.Primitive, new[grep(pat, names(new))])
Filter(.Primitive, names(new[grep(pat, names(new))]))
Filter(is.Primitive, names(new[grep(pat, names(new))]))
Filter(is.primitive, names(new[grep(pat, names(new))]))
help(is.primitive)
Filter(is.primitive, new[grep(pat, names(new))])
'%xor%' <- function(a, b) {
if(!a && !b) {return(FALSE)}
if(!a) {return(TRUE)}
if(!b) {return(FALSE)}
FALSE
}
4 > 3 %xor% 5 > 2
(4 > 3) %xor% (5 > 2)
floor(4.3232)
'poo<-' <- function(x) {x[floor(runif * length(x))] <- 1}
x <- 1:10
poo(x)
'poo<-' <- function(x, value) {x[floor(runif * length(x))] <- value}
poo(x) <- 10
'poo<-' <- function(x, value) {x[floor(runif() * length(x))] <- value}
poo(x) <- 10
'poo<-' <- function(x, value) {x[floor(runif(1) * length(x))] <- value}
poo(x) <- 10
x
x <- 1:10
x
poo(x) <- 10
a <- c(1,3,4,543,3)
a
class(a)
class(a)[2]
class(a)[2] <- 'butt'
class(a)
class(a)[1] <- 'butts'
class(a)
a <- NULL
!is.null(a) || stop('efwafweaf')
f <- function(x) {
useMethod('f')
}
f.a <- function(x) x + 10
a <- function(x) {
is.numeric(x) || stop('get yer shit outa here')
structure(list(x), class = 'a')
}
x <- 1:10
a(1:10)
b<-a(1:10)
f(b)
f <- function(x) {
UseMethod('f')
}
f(b)
f <- function(x) {
UseMethod('f')
}
f.a <- function(x) x + 10
a <- function(x) {
is.numeric(x) || stop('get yer shit outa here')
structure(vector(x), class = 'a')
}
x <- 1:10
b<-a(x)
f <- function(x) {
UseMethod('f')
}
f.a <- function(x) x + 10
a <- function(x) {
is.numeric(x) || stop('get yer shit outa here')
structure(x, class = 'a')
}
b<-a(x)
b
f(a)
f(b)
#s3 generic for calling method
f <- function(x) {
UseMethod('f')
}
#method definition for class a
f.a <- function(x) x + 10
#class constructor for class a
a <- function(x) {
is.numeric(x) || stop('get yer shit outa here')
structure(x, class = 'a')
}
b <- 'b'
b
a(b)
x <- 1:19
x
a(x)
b <- a(x)
f(b)
setwd("~/Code/shinyapp")
shiny::runApp()
runApp()
help(subset)
runApp()
runApp()
a <- c('a','b','c')
a <- as.factor(a)
a
a[a ==]
a[a == 'b']
help(filter)
runApp()
runApp()
help("group_by_")
runApp()
runApp()
runApp()
runApp()
data <- read.csv('data.csv')
termopt <- unique(data$term)
subjopt <- unique(data$crs)
radio <- c('Gender','Ethnicity')
temp <- data %>%
subset(term %in% input$strm) %>%
group_by(term, "Gender") %>%
summarise(avg = mean(success))
temp <- data %>%
#subset(term %in% input$strm) %>%
group_by(term, "Gender") %>%
summarise(avg = mean(success))
temp
x <- c(hello)
runApp()
library(dplyr)
df <-  data.frame(
asihckhdoydk = sample(LETTERS[1:3], 100, replace=TRUE),
a30mvxigxkgh = sample(LETTERS[1:3], 100, replace=TRUE),
value = rnorm(100)
)
df
names(df)[-3]
names(df)[-2]
names(df)[-1]
grp_cols <- names(df)[-3]
help(as.symbol)
names(data)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
